//----------------protobuf格式------------
// 字段格式：限定修饰符① | 数据类型② | 字段名称③ | = | 字段编码值④ | [字段默认值⑤]
// 
//----------------------------------------
//----------------xxxxxxxxxxxx------------
//----------------------------------------

package gameLogicProtocolDataPackage;
syntax = "proto3";

message nPosition
{
	optional sint32 posX = 1;     // 玩家x坐标
	optional sint32 posY = 2;     // y坐标
	optional sint32 angle = 3;    //角度
}

//----------------心跳协议----------------
message DATA_GAME_REQHEART
{
	
}
message DATA_GAME_RESPHEART
{
	
}
//----------------------------------------

//----------------玩家数据协议------------
message SelfPlayerInfo
{
	optional uint32 kindid = 1;					   //玩家类型ID
	optional uint32 speed = 2;                     //移速
	optional uint32 attack = 3;                    //攻击力 
	optional uint32 defenses = 4;                  //防御力  需要对应的减伤公式 ( X/（X＋100）)
	optional uint32 maxHp = 7;					   //玩家最大血量
	optional uint32 maxMp = 8;						//玩家最大蓝量
	optional nPosition pos = 9;						//玩家坐标
}

message OtherPlayerInfo
{
	optional string playerid = 1;
	optional uint32 kindid = 2;	
	optional nPosition pos = 3;
}
message DATA_GAME_REQGAMEPLAYERINFO
{
	optional string playerid = 1;  //玩家ID
}
message DATA_GAME_RESPGAMEPLAYERINFO
{
	optional SelfPlayerInfo selfplayerinfo = 1;//自身玩家数据
	repeated OtherPlayerInfo otherplayerinfo = 2;
}
//----------------------------------------



//----------------移动协议----------------
message DATA_GAME_REQMOVE
{
	optional nPosition pos = 1;
	optional string playerid = 2;  //玩家ID
}
message DATA_GAME_RESPMOVE
{
	optional nPosition pos = 1;
	optional uint32 flag = 15; //标识符
	enum FLAG {
		SUCCESS = 1;
		
		PLAYER_DEAD = 2;
		GAME_OVER = 3;
		NOT_MOVE = 4; //移动受阻 受到技能效果 或者遇到障碍

	}
}
//----------------------------------------

//----------------断线重连----------------
message RelinkPlayerInfo
{
	optional string nickname    = 1;
	optional uint32 team = 2; //所处的队伍 例如红黄蓝队
	optional uint32 teamindex = 3; //所处队伍的位置
	optional string playerid = 4;  //玩家ID
}
message DATA_GAME_REQRELINK
{
	optional string playerid = 1;
	optional uint32 roomid  = 2;
}
message DATA_GAME_RESPRELINK
{
	repeated RelinkPlayerInfo relinkplayerinfo = 1; //获取大厅获得的玩家信息 然后再走一遍进入游戏的协议
	optional uint32 flag = 15; //标识符
	enum FLAG{
		SUCCESS = 1;
		//FAIL
		GAMEFINISH = 8; //游戏结束
	}
}
//----------------------------------------